package vv.tp3;

import net.sourceforge.pmd.lang.ast.Node;
import net.sourceforge.pmd.lang.java.ast.ASTAnnotation;
import net.sourceforge.pmd.lang.java.rule.junit.*;
import net.sourceforge.pmd.lang.java.ast.ASTBlock;
import net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody;
import net.sourceforge.pmd.lang.java.ast.ASTForStatement;
import net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration;
import net.sourceforge.pmd.lang.java.ast.ASTResultType;
import net.sourceforge.pmd.lang.java.ast.ASTTypeParameters;
import net.sourceforge.pmd.lang.java.rule.AbstractJavaRule;

public class CompteDesTests extends AbstractJavaRule {

	int c = 0;
	
	
	
	public Object visit(ASTMethodDeclaration method, Object data) {
		
		boolean junitm = true;
		if (!method.isPublic() || method.isAbstract() || method.isNative() || method.isStatic()) {
			junitm=false;
		}
		
		Node node = method.jjtGetChild(0);
		
		if (node instanceof ASTTypeParameters) {
		    node = method.jjtGetChild(1);
		}
		
		if(((ASTResultType) node).isVoid() && method.getMethodName().startsWith("test")) addViolation(data, method);
		
		if(junitm) ;
       
		return super.visit(method, data);
	}
}