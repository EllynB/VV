package vv.tp3;

import java.util.concurrent.atomic.AtomicBoolean;

import net.sourceforge.pmd.lang.java.ast.ASTBlock;
import net.sourceforge.pmd.lang.java.ast.ASTBooleanLiteral;
import net.sourceforge.pmd.lang.java.ast.ASTWhileStatement;
import net.sourceforge.pmd.lang.java.rule.AbstractJavaRule;

public class WhileInfini extends AbstractJavaRule {
	
    public Object visit(ASTWhileStatement node, Object data) {
		
    	
    	if (node.jjtGetChild(0) instanceof AtomicBoolean) addViolation(data, node);
    	
    	return super.visit(node, data);
    }

}
